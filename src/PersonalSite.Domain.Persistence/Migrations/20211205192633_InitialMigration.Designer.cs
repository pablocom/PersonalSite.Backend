// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersonalSite.Persistence;

#nullable disable

namespace PersonalSite.Persistence.Migrations
{
    [DbContext(typeof(PersonalSiteDbContext))]
    [Migration("20211205192633_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PersonalSite.Domain.Model.JobExperienceAggregate.JobExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("TechStack")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JobExperiences");
                });

            modelBuilder.Entity("PersonalSite.Domain.Model.JobExperienceAggregate.JobExperience", b =>
                {
                    b.OwnsOne("PersonalSite.Domain.Model.JobExperienceAggregate.JobPeriod", "JobPeriod", b1 =>
                        {
                            b1.Property<int>("JobExperienceId")
                                .HasColumnType("integer");

                            b1.Property<DateTime?>("End")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("JobExperienceId");

                            b1.ToTable("JobExperiences");

                            b1.WithOwner()
                                .HasForeignKey("JobExperienceId");
                        });

                    b.Navigation("JobPeriod");
                });
#pragma warning restore 612, 618
        }
    }
}
